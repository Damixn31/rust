pub fn one_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
    ]
}

pub fn one_and_five_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 5),
        (8, 6),
        (8, 7),
        (8, 8),
        (8, 9),
        (8, 10),
    ]
}

pub fn one_and_ten_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 5),
        (7, 7),
        (7, 8),
        (7, 9),
        (7, 10),
    ]
}

pub fn one_and_a_quarter() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 5),
        (9, 5),
        (9, 6),
        (9, 7),
        (9, 8),
        (9, 9),
        (9, 10),
    ]
}

pub fn one_and_twenty_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 5),
        (7, 1),
        (7, 2),
        (7, 3),
        (7, 4),
        (7, 5),
        (7, 6),
    ]
}

pub fn one_and_twenty_five_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 5),
        (8, 0),
        (8, 1),
        (8, 2),
        (8, 3),
        (8, 4),
        (8, 5),
        (8, 6),
        (8, 7),
        (8, 8),
        (8, 9),
        (8, 10),
    ]
}

pub fn one_and_a_half_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 5),
        (9, 0),
        (9, 1),
        (9, 2),
        (9, 3),
        (9, 4),
    ]
}

pub fn one_less_twenty_five_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 6),
        (6, 7),
        (6, 8),
        (6, 9),
        (6, 10),
        (8, 0),
        (8, 1),
        (8, 2),
        (8, 3),
        (8, 4),
        (8, 5),
        (8, 6),
        (8, 7),
        (8, 8),
        (8, 9),
        (8, 10),
    ]
}

pub fn one_less_twenty_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 6),
        (6, 7),
        (6, 8),
        (6, 9),
        (6, 10),
        (7, 1),
        (7, 2),
        (7, 3),
        (7, 4),
        (7, 5),
        (7, 6),
    ]
}

pub fn a_quarter_to_two_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 6),
        (6, 7),
        (6, 8),
        (6, 9),
        (6, 10),
        (9, 5),
        (9, 6),
        (9, 7),
        (9, 8),
        (9, 9),
        (9, 10),
    ]
}

pub fn ten_to_two_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 6),
        (6, 7),
        (6, 8),
        (6, 9),
        (6, 10),
        (7, 7),
        (7, 8),
        (7, 9),
        (7, 10),
    ]
}

pub fn five_to_two_am() -> Vec<(usize, usize)> {
    vec![
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (0, 8),
        (0, 9),
        (0, 10),
        (1, 9),
        (1, 10),
        (6, 6),
        (6, 7),
        (6, 8),
        (6, 9),
        (6, 10),
        (8, 6),
        (8, 7),
        (8, 8),
        (8, 9),
        (8, 10),
    ]
}
